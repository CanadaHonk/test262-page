name: test262 runner

on:
  push:
    branches: [ "main" ]

jobs:
  test262:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # engine: [v8, jsc, sm, chakra, hermes, libjs, engine262, qjs, xs, graaljs] # all engines
        # engine: [v8, jsc, sm, chakra, libjs, engine262, qjs, xs, graaljs] # exclude hangers
        engine: [jsc, qjs, graaljs, xs] # all ~1 hour
        # engine: [v8, jsc, sm, chakra] # just major
        # engine: [jsc] # just jsc

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Run test262 with ${{ matrix.engine }}
      run: ./scripts/engines/${{ matrix.engine }}.sh

    - name: Upload results
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.engine }}
        path: results.json jsvu.json esvu.json time.txt test262-rev.txt

  generate:
    runs-on: ubuntu-latest
    needs: test262

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18

    - uses: actions/download-artifact@v3
      with:
        path: results

    - name: Generate site
      run: node site/generate.mjs

    - name: Upload pages artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: site

  deploy:
    needs: generate

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2